Intel(R) MPI Library  (2018.2.199) unloaded
Intel Parallel Studio XE 2018_2 unloaded

To start with conda environments :
  * List available environments   : "conda env list"
  * Use an available environment  : "conda activate <the-wanted-env>"
  * Create your own environment   : "conda create -n <my-env>" and to use it "conda activate <my-env>"
  * More information              : https://www.calmip.univ-toulouse.fr/conda 
/tmpdir/delatorr/dl_env/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/tmpdir/delatorr/dl_env/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.
  warnings.warn(msg)
/tmpdir/delatorr/dev/PCAM/CNN_training_resnet_rgbhsvhed.py:243: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(best_checkpoint)
slurmstepd: error: Detected 1 oom-kill event(s) in StepId=1499853.0. Some of your processes may have been killed by the cgroup out-of-memory handler.
srun: error: olympevolta0: task 0: Out Of Memory
srun: launch/slurm: _step_signal: Terminating StepId=1499853.0
slurmstepd: error: Detected 1 oom-kill event(s) in StepId=1499853.batch. Some of your processes may have been killed by the cgroup out-of-memory handler.
################################### ERROR ##########################################

This job (1499853) has triggered an OutOfMemory error (cgroup).

Please avoid making Out of Memory error by setting some controls :

#SBATCH --mem=170G          # Set a memory limit
#SBATCH --acctg-freq=task=1 # Set a memory check frequency in second (60s by default)

Please also consider node depopulate : https://www.calmip.univ-toulouse.fr/node/1041

#####################################################################################
